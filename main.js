!function(){"use strict";var e=class{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleCardClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setCardEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleCardLike()})),this._deleteButton.addEventListener("click",(()=>{this._handleCardDelete()})),this._cardImage.addEventListener("click",(()=>{this._handleCardPreview()}))}_handleCardLike(){this._likeButton.classList.toggle("card__like-button_active")}_handleCardDelete(){this._cardElement.remove(),this._cardElement=null}_handleCardPreview(){this._handleCardClick(this._name,this._link)}getView(){return this._cardElement=this._getTemplate(),this._cardElement.querySelector(".card__name").textContent=this._name,this._cardImage=this._cardElement.querySelector(".card__image"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._previewButton=this._cardElement.querySelector("#preview-button"),this._setCardEventListeners(),this._cardElement}},t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}_enableSubmitButton(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}_disableSubmitButton(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}toggleButtonState(){this._hasInvalidInput(this._inputElements)?this._disableSubmitButton():this._enableSubmitButton()}_setEventListeners(){this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._buttonElement=this._form.querySelector(this._submitButtonSelector),this.toggleButtonState(),this._form.addEventListener("reset",(()=>{setTimeout((()=>{this.toggleButtonState()}),0)})),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};var s=class{constructor(e){let{popupSelector:t}=e;var s,r,n;s=this,n=e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close"))&&this.close()},(r=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var r=s.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(r="_handleOverlayClose"))in s?Object.defineProperty(s,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):s[r]=n,this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("mousedown",this._handleOverlayClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("mousedown",this._handleOverlayClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",this.close())}},r=class extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupForm.querySelectorAll(".modal__input"),this._handleFormSubmit=t}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setEventListeners(){super.setEventListeners(),this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}close(){super.close(),this._popupForm.reset()}};const n={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__error_input_type",errorClass:"modal__error_visible"},i=document.querySelector(".profile__edit-button"),o=document.querySelector("#profile-edit-modal"),a=document.querySelector(".profile__title"),l=document.querySelector(".profile__description"),c=document.querySelector("#modal-name"),u=document.querySelector("#modal-description"),d=document.querySelector("#card-edit-modal"),_=document.querySelector(".profile__add-button"),m=new t(n,o),h=new t(n,d);m.enableValidation(),h.enableValidation();const p=new class{constructor(e){let{userName:t,userJob:s}=e;this._userName=t,this._userDescription=s}getUserInfo(){return{title:this._userName.textContent,description:this._userDescription.textContent}}setUserInfo(e){this._userName.textContent=e.title,this._userDescription.textContent=e.description}}({userName:a,userJob:l});i.addEventListener("click",(function(){const{description:e,title:t}=p.getUserInfo();c.value=t,u.value=e,v.open()}));const v=new r("#profile-edit-modal",(e=>{p.setUserInfo(e)}));v.setEventListeners();const E=new class extends s{constructor(e){super({popupSelector:e}),this._previewImage=this._popupElement.querySelector(".preview-modal__image"),this._previewName=this._popupElement.querySelector(".preview-modal__caption")}open(e,t){this._previewImage.src=t,this._previewImage.alt=e,this._previewName.textContent=e,super.open()}}("#preview-modal");function S(t){return new e(t,"#card-template",((e,t)=>{E.open(e,t)}))}const w=new class{constructor(e,t){let{items:s,renderer:r}=e;this._itemsArray=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._itemsArray.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg "}],renderer:e=>{const t=S(e);w.addItem(t.getView())}},".cards__list");w.renderItems();const g=new r("#card-edit-modal",(e=>{const t=S(e);w.addItem(t.getView())}));_.addEventListener("click",(()=>g.open())),g.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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dHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3RvcihkYXRhLCBjYXJkU2VsZWN0b3IsIGhhbmRsZUNhcmRDbGljaykge1xuICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XG4gICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcbiAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7XG4gICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrOyAvL2FkZCBtZXRob2QgdG8gY29uc3RydWN0b3JcbiAgfVxuXG4gIC8vQWRkIG1ldGhvZHMgZm9yIGNhcmRzIGhlcmVcbiAgLy9fZ2V0VGVtcGxhdGUoKSBmcm9tIGNhcmRTZWxlY3RvciB3aXRoIGNsb25lIHRvIGNyZWF0ZSB0ZW1wbGF0ZVxuICBfZ2V0VGVtcGxhdGUoKSB7XG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxuICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkXCIpXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xuICAgIHJldHVybiBjYXJkRWxlbWVudDtcbiAgfVxuXG4gIC8vX3NldENhcmRFdmVudExpc3RlbmVycyBmb3IgY2xpY2sgZXZlbnRzIHdoYXQgYXJlIHRoZXkgZm9yXG4gIF9zZXRDYXJkRXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgLy9MaWtlXG4gICAgdGhpcy5fbGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlQ2FyZExpa2UoKTtcbiAgICB9KTtcblxuICAgIC8vRGVsZXRlXG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVDYXJkRGVsZXRlKCk7XG4gICAgfSk7XG4gICAgLy9QcmV2aWV3XG4gICAgdGhpcy5fY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVDYXJkUHJldmlldygpO1xuICAgIH0pO1xuICB9XG5cbiAgLy9faGFuZGxlRXZlbnRzKCkgc2V0IGV2ZW50IGhhbmRsZXJzXG4gIF9oYW5kbGVDYXJkTGlrZSgpIHtcbiAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XG4gIH1cblxuICBfaGFuZGxlQ2FyZERlbGV0ZSgpIHtcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5yZW1vdmUoKTtcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IG51bGw7XG4gIH1cblxuICBfaGFuZGxlQ2FyZFByZXZpZXcoKSB7XG4gICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrKHRoaXMuX25hbWUsIHRoaXMuX2xpbmspO1xuICB9XG5cbiAgLy9hZGQgZWxlbWVudHMgYW5kIGZ1bmN0aW9uYWxpdHkgdG8gY2FyZFxuICBnZXRWaWV3KCkge1xuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcbiAgICAvL2dlbmVyYXRlcyBjYXJkIG5hbWUsIGltYWdlIHNyYyBhbmQgYWx0XG4gICAgdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19uYW1lXCIpLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpO1xuICAgIHRoaXMuX2NhcmRJbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xuICAgIHRoaXMuX2NhcmRJbWFnZS5hbHQgPSB0aGlzLl9uYW1lO1xuICAgIC8vZW5hYmxlcyBjbGlja0hhbmRsZXIgZnVuY3Rpb25zXG4gICAgdGhpcy5fbGlrZUJ1dHRvbiA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS1idXR0b25cIik7XG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiLmNhcmRfX2RlbGV0ZS1idXR0b25cIlxuICAgICk7XG4gICAgdGhpcy5fcHJldmlld0J1dHRvbiA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJldmlldy1idXR0b25cIik7XG4gICAgdGhpcy5fc2V0Q2FyZEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgcmV0dXJuIHRoaXMuX2NhcmRFbGVtZW50O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENhcmQ7XG4iLCJjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3IoY29uZmlnLCBmb3JtRWxlbWVudCkge1xuICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSBjb25maWcuaW5wdXRTZWxlY3RvcjtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IGNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3M7XG4gICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gY29uZmlnLmlucHV0RXJyb3JDbGFzcztcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gY29uZmlnLmVycm9yQ2xhc3M7XG4gICAgdGhpcy5fZm9ybSA9IGZvcm1FbGVtZW50O1xuICB9XG5cbiAgLy9BZGQgTWV0aG9kc1xuICAvL1Nob3cgRXJyb3IgRnVuY3Rpb24gd2l0aCBWYWxpZGF0aW9uIE1lc3NhZ2VcbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlO1xuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICB9XG5cbiAgLy9IaWRlIEVycm9yIEZ1bmN0aW9uIGFuZCByZW1vdmVWYWxpZGF0aW9uIE1lc3NhZ2VcbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcbiAgfVxuXG4gIC8vQ2hlY2sgaW5wdXQgZWxlbWVudCB2YWxpZGl0eSAtPiBpZiByZXR1cm5zIGZhbHNlLCBzaG93IGlucHV0IGVycm9yXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KSB7XG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfVxuICB9XG4gIC8vLy9cblxuICAvL2lzIElucHV0IHZhbGlkOiBpbnB1dCBsaXN0IGlzIGZyb20gaW5wdXRFbGVtZW50c1xuICBfaGFzSW52YWxpZElucHV0KCkge1xuICAgIHJldHVybiAhdGhpcy5faW5wdXRFbGVtZW50cy5ldmVyeShcbiAgICAgIChpbnB1dEVsZW1lbnQpID0+IGlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZFxuICAgICk7XG4gIH1cbiAgLy8vL1xuICAvL0VuYWJsZSBCdXR0b25cbiAgX2VuYWJsZVN1Ym1pdEJ1dHRvbigpIHtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlO1xuICB9XG4gIC8vLy9cblxuICAvL0Rpc2FibGUgQnV0dG9uXG4gIF9kaXNhYmxlU3VibWl0QnV0dG9uKCkge1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gdHJ1ZTtcbiAgfVxuICAvLy8vXG5cbiAgLy8vL1xuICAvL3RvZ2dsZSBidXR0b24gc3RhdGVcbiAgdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCh0aGlzLl9pbnB1dEVsZW1lbnRzKSkge1xuICAgICAgdGhpcy5fZGlzYWJsZVN1Ym1pdEJ1dHRvbigpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9lbmFibGVTdWJtaXRCdXR0b24oKTtcbiAgICB9XG4gIH1cbiAgLy8vL1xuICAvLy8vXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9pbnB1dEVsZW1lbnRzID0gWy4uLnRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKV07XG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XG4gICAgLy8gaGVyZSB5b3UgZGlzYWJsZSB0aGUgYnV0dG9uIHdoZW4geW91IHN0YXJ0IHRoZSBwcm9qZWN0XG4gICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSgpO1xuICAgIC8vIGhlcmUgeW91IGFkZCB0aGUgYHJlc2V0YCBoYW5kbGVyXG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwicmVzZXRcIiwgKCkgPT4ge1xuICAgICAgLy8gYHNldFRpbWVvdXRgIGlzIG5lZWRlZCB0byB3YWl0IHRpbGwgdGhlIGZvcm0gaXMgZnVsbHkgcmVzZXQgYW5kIHRoZW4gY2FsbCBgdG9nZ2xlQnV0dG9uU3RhdGVgXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSgpO1xuICAgICAgfSwgMCk7IC8vIGl04oCZcyBlbm91Z2ggdG8gcHV0IDAgbXMgaGVyZVxuICAgIH0pO1xuICAgIHRoaXMuX2lucHV0RWxlbWVudHMuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XG4gICAgICAgIHRoaXMudG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgLy8gZW5hYmxlVmFsaWRhdGlvblxuICAvL0dldCBhbmQgbG9vcCB0aHJvdWdoIGZvcm1FbGVtZW50XG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH0pO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRm9ybVZhbGlkYXRvcjtcbiIsIi8vUG9wdXAgY2xhc3Mgb3BlbnMgYW5kIGNsb3NlcyBwb3B1cCB3aW5kb3dcbmNsYXNzIFBvcHVwIHtcbiAgLy9hZGQgY29uc3RydWN0b3IgLSAxcGFyYW0gPSBwb3B1cCBzZWxlY3RvclxuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IgfSkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7IC8vQ1NTIHNlbGVjdG9yIHBvcHVwIC1wcmV2aWV3L3Byb2ZpbGUvY2FyZGVkaXRcbiAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XG4gIH1cblxuICAvL3B1YmxpYyBvcGVuIG1ldGhvZFxuICBvcGVuKCkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwibW9kYWxfb3BlbmVkXCIpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIHRoaXMuX2hhbmRsZU92ZXJsYXlDbG9zZSk7XG4gIH1cblxuICAvL3B1YmxpYyBjbG9zZSBtZXRob2RcbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgdGhpcy5faGFuZGxlT3ZlcmxheUNsb3NlKTtcbiAgfVxuXG4gIC8vc3RvcmUgbG9naWMgZm9yIGNsb3NpbmcgcG9wdXAgd2l0aCBFc2Mga2V5XG4gIF9oYW5kbGVFc2NDbG9zZShldnQpIHtcbiAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbiAgfVxuXG4gIC8vYWRkIGNsb3NlIHdpdGggb3ZlcmxheSBmdW5jdGlvblxuICBfaGFuZGxlT3ZlcmxheUNsb3NlID0gKGV2dCkgPT4ge1xuICAgIGlmIChcbiAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwibW9kYWxfb3BlbmVkXCIpIHx8XG4gICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm1vZGFsX19jbG9zZVwiKVxuICAgICkge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbiAgfTtcblxuICAvL1NldCBFdmVudCBMaXN0ZW5lcnMgZm9yIFggaWNvbiBhbmQgb3ZlcmxheSBjbGljayBhbmQgRXNjXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIC8vY2xvc2Ugd2l0aCBpY29uIGNsaWNrIGFuZCB3aXRoIEVzYyBhbmQgb3ZlcmxheSBjbGlja1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5jbG9zZSgpKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBQb3B1cDtcbiIsIi8vQ2hpbGQgb2YgUG9wdXBcbi8vQ2hhbmdlcyBwYXJlbnQgdG8gdXBkYXRlIGZvcm1zXG5pbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCkge1xuICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KTtcbiAgICB0aGlzLl9wb3B1cEZvcm0gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTsgLy9TZWxlY3QgZm9ybSBjbGFzc1xuICAgIHRoaXMuX2lucHV0TGlzdCA9IHRoaXMuX3BvcHVwRm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLm1vZGFsX19pbnB1dFwiKTsgLy9nZXQgYWxsIGlucHV0IGZpZWxkIGNsYXNzZXMgZnJvbSBmb3Jtc1xuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xuICB9XG5cbiAgLy9Db2xsZWN0IGRhdGEgZnJvbSBpbnB1dCBmaWVsZCBhbmQgcmV0dXJuIGFzIG9iamVjdFxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgdGhpcy5fZm9ybVZhbHVlcyA9IHt9OyAvL2VtcHR5IG9iamVjdFxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgdGhpcy5fZm9ybVZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xuICAgIH0pO1xuICAgIHJldHVybiB0aGlzLl9mb3JtVmFsdWVzOyAvLyBpbnB1dCBmaWVsZCBkYXRhIHJldHVybmVkIGFzIG9iamVjdFxuICB9XG5cbiAgLy8vTW9kaWZ5IHBhcmVudCBzZXQgZXZlbnQgbGlzdGVuZXJzIC0gYWRkIHN1Ym1pdCBldiBoYW5kbGVyIGFuZCBjbGljayBldmVudCB0byBjbG9zZSBpY29uXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7IC8vQ2xvc2Ugd2l0aCBYIGljb24gYW5kIG92ZXJsYXkgY2xpY2tcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7IC8vcGFzcyBpbiB2YWx1ZXMgZnJvbSBvYmplY3Qgd2l0aCBpbnB1dCB2YWx1ZXNcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9KTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHN1cGVyLmNsb3NlKCk7IC8vY2FsbCBjbG9zZSBmb3IgcGFyZW50XG4gICAgdGhpcy5fcG9wdXBGb3JtLnJlc2V0KCk7IC8vcmVzZXQgdmFsdWVzIG9mIGZvcm0gb24gY2xvc2UgLSBvbmx5IHdvcmtzIG9uIHRoaXMgY2hpbGRcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBQb3B1cFdpdGhGb3JtO1xuIiwiLy9Jbml0aWFsIENhcmRzIHRvIGJlIHJlbmRlcmVkXG5leHBvcnQgY29uc3QgaW5pdGlhbENhcmRzID0gW1xuICB7XG4gICAgbmFtZTogXCJZb3NlbWl0ZSBWYWxsZXlcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QveW9zZW1pdGUuanBnXCIsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIkxha2UgTG91aXNlXCIsXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xha2UtbG91aXNlLmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCJCYWxkIE1vdW50YWluc1wiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9iYWxkLW1vdW50YWlucy5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiTGF0ZW1hclwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYXRlbWFyLmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvdmFub2lzZS5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiTGFnbyBkaSBCcmFpZXNcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFnby5qcGcgXCIsXG4gIH0sXG5dO1xuXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtXCIsXG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIubW9kYWxfX2J1dHRvblwiLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19idXR0b25fZGlzYWJsZWRcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19lcnJvcl9pbnB1dF90eXBlXCIsXG4gIGVycm9yQ2xhc3M6IFwibW9kYWxfX2Vycm9yX3Zpc2libGVcIixcbn07XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy9Qcm9maWxlIENvbnN0YW50c1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVFZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgXCIucHJvZmlsZV9fZWRpdC1idXR0b25cIlxuKTtcblxuZXhwb3J0IGNvbnN0IHByb2ZpbGVFZGl0TW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZWRpdC1tb2RhbFwiKTtcblxuZXhwb3J0IGNvbnN0IHByb2ZpbGVOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX190aXRsZVwiKTtcblxuZXhwb3J0IGNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gIFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCJcbik7XG5cbmV4cG9ydCBjb25zdCBtb2RhbElucHV0TmFtZUZpZWxkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtb2RhbC1uYW1lXCIpO1xuXG5leHBvcnQgY29uc3QgbW9kYWxJbnB1dERlc2NyaXB0aW9uRmllbGQgPVxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21vZGFsLWRlc2NyaXB0aW9uXCIpO1xuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vQ2FyZCBDb25zdGFudHNcbmV4cG9ydCBjb25zdCBjYXJkRWRpdE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYXJkLWVkaXQtbW9kYWxcIik7XG5leHBvcnQgY29uc3QgY2FyZEVkaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2FkZC1idXR0b25cIik7XG4iLCIvL0ltcG9ydHNcbmltcG9ydCBDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmQuanNcIjtcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XG5pbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xuaW1wb3J0IHtcbiAgaW5pdGlhbENhcmRzLFxuICBjb25maWcsXG4gIHByb2ZpbGVFZGl0QnV0dG9uLFxuICBwcm9maWxlRWRpdE1vZGFsLFxuICBwcm9maWxlTmFtZSxcbiAgcHJvZmlsZURlc2NyaXB0aW9uLFxuICBtb2RhbElucHV0TmFtZUZpZWxkLFxuICBtb2RhbElucHV0RGVzY3JpcHRpb25GaWVsZCxcbiAgY2FyZEVkaXRNb2RhbCxcbiAgY2FyZEVkaXRCdXR0b24sXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy9Gb3JtIFZhbGlkYXRpb25zIEluc3RhbmNlcyBhbmQgZnVuY3Rpb24gZnJvbSBjbGFzc1xuY29uc3QgZWRpdEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIHByb2ZpbGVFZGl0TW9kYWwpO1xuY29uc3QgYWRkRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgY2FyZEVkaXRNb2RhbCk7XG5cbmVkaXRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbmFkZEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vL1Byb2ZpbGUgTW9kYWwgRnVuY3Rpb25zXG4vL1VzZXIgSW5mbyBjYWxsYmFja1xuY29uc3QgdXNlcmluZm8gPSBuZXcgVXNlckluZm8oe1xuICB1c2VyTmFtZTogcHJvZmlsZU5hbWUsXG4gIHVzZXJKb2I6IHByb2ZpbGVEZXNjcmlwdGlvbixcbn0pO1xuXG5mdW5jdGlvbiBvcGVuUHJvZmlsZUVkaXRGb3JtKCkge1xuICBjb25zdCB7IGRlc2NyaXB0aW9uLCB0aXRsZSB9ID0gdXNlcmluZm8uZ2V0VXNlckluZm8oKTtcbiAgbW9kYWxJbnB1dE5hbWVGaWVsZC52YWx1ZSA9IHRpdGxlO1xuICBtb2RhbElucHV0RGVzY3JpcHRpb25GaWVsZC52YWx1ZSA9IGRlc2NyaXB0aW9uO1xuICBwcm9maWxlUG9wdXAub3BlbigpO1xufVxuXG5wcm9maWxlRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb3BlblByb2ZpbGVFZGl0Rm9ybSk7XG5cbi8vQWRkIFByb2ZpbGUgRm9ybSBpbnB1dCBhbmQgc2V0IG9uIHBhZ2VcbmNvbnN0IHByb2ZpbGVQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI3Byb2ZpbGUtZWRpdC1tb2RhbFwiLCAodmFsdWVzKSA9PiB7XG4gIHVzZXJpbmZvLnNldFVzZXJJbmZvKHZhbHVlcyk7XG59KTtcblxucHJvZmlsZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vQWRkIENhcmQgYW5kIFBvcHVwIEluc3RhbmNlc1xuLy9wcmV2aWV3IFBvcHVwIChwb3B1cFNlbGVjdG9yKVxuY29uc3QgcHJldmlld1BvcHVwID0gbmV3IFBvcHVwV2l0aEltYWdlKFwiI3ByZXZpZXctbW9kYWxcIik7XG5cbi8vRnVuY3Rpb24gdG8gY3JlYXRlY2FyZCBjYWxsZWQgd2l0aCByZW5kZXJlclxuZnVuY3Rpb24gY3JlYXRlQ2FyZChjYXJkRGF0YSkge1xuICBjb25zdCBjcmVhdGVDYXJkID0gbmV3IENhcmQoXG4gICAgY2FyZERhdGEsXG4gICAgXCIjY2FyZC10ZW1wbGF0ZVwiLFxuICAgIChjYXJkTmFtZSwgY2FyZExpbmspID0+IHtcbiAgICAgIHByZXZpZXdQb3B1cC5vcGVuKGNhcmROYW1lLCBjYXJkTGluayk7XG4gICAgfVxuICApO1xuICByZXR1cm4gY3JlYXRlQ2FyZDtcbn1cblxuLy9SZW5kZXIgSW5pdGlhbCBDYXJkc1xuY29uc3QgY2FyZFNlY3Rpb24gPSBuZXcgU2VjdGlvbihcbiAge1xuICAgIGl0ZW1zOiBpbml0aWFsQ2FyZHMsXG4gICAgcmVuZGVyZXI6IChjYXJkRGF0YSkgPT4ge1xuICAgICAgY29uc3QgY2FyZCA9IGNyZWF0ZUNhcmQoY2FyZERhdGEpO1xuICAgICAgY2FyZFNlY3Rpb24uYWRkSXRlbShjYXJkLmdldFZpZXcoKSk7XG4gICAgfSxcbiAgfSxcbiAgXCIuY2FyZHNfX2xpc3RcIlxuKTtcblxuY2FyZFNlY3Rpb24ucmVuZGVySXRlbXMoKTtcblxuLy9BZGQgbmV3IGNhcmQgd2l0aCBhZGQgY2FyZCBmb3JtXG5jb25zdCBhZGRDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcIiNjYXJkLWVkaXQtbW9kYWxcIiwgKGNhcmREYXRhKSA9PiB7XG4gIGNvbnN0IG5ld0NhcmQgPSBjcmVhdGVDYXJkKGNhcmREYXRhKTtcbiAgY2FyZFNlY3Rpb24uYWRkSXRlbShuZXdDYXJkLmdldFZpZXcoKSk7XG59KTtcblxuLy9PcGVuIGNhcmQgcG9wdXAgd2l0aCBvcGVuIGFuZCBjbGljayBsaXN0ZW5lclxuY2FyZEVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IGFkZENhcmRQb3B1cC5vcGVuKCkpO1xuXG5hZGRDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiIsIi8vIFJlbmRlciBVc2VyIGluZm8gb24gdGhlIHBhZ2VcblxuY2xhc3MgVXNlckluZm8ge1xuICAvL2FkZCBjb25zdHJ1Y3RvciAtIHRha2UgaW4gb2JqIC0gc2VsZWN0b3JzIG9mIHR3byBlbGVtZW50c1xuICBjb25zdHJ1Y3Rvcih7IHVzZXJOYW1lLCB1c2VySm9iIH0pIHtcbiAgICB0aGlzLl91c2VyTmFtZSA9IHVzZXJOYW1lOyAvL3Byb2ZpbGUgdGl0bGVcbiAgICB0aGlzLl91c2VyRGVzY3JpcHRpb24gPSB1c2VySm9iOyAvL3Byb2ZpbGUgZGVzY3JpcHRpb25cbiAgfVxuXG4gIC8vcmV0dXJuIG9iamVjdCB3aXRoIGluZm8gYWJvdXQgdXNlciAtPiBuZWVkIHRvIHJldHVybiB2YWx1ZXMgZnJvbSB0aGVyZSBhbHJlYWR5XG4gIC8vaW4gaW5kZXguanMsIHZhbHVlIGdldHMgcmV0dXJuZWQgdG8gdmFyaWFibGVcbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRpdGxlOiB0aGlzLl91c2VyTmFtZS50ZXh0Q29udGVudCxcbiAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLl91c2VyRGVzY3JpcHRpb24udGV4dENvbnRlbnQsXG4gICAgfTtcbiAgfVxuXG4gIHNldFVzZXJJbmZvKHZhbHVlKSB7XG4gICAgdGhpcy5fdXNlck5hbWUudGV4dENvbnRlbnQgPSB2YWx1ZS50aXRsZTtcbiAgICB0aGlzLl91c2VyRGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSB2YWx1ZS5kZXNjcmlwdGlvbjtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBVc2VySW5mbztcbiIsIi8vQ2hpbGQgb2YgUG9wdXBcbi8vQ2hhbmdlcyBwYXJlbnQgb3BlbiBtZXRob2QgdG8gYWRkIGltYWdlIHRvIHBvcHVwIHdpdGggc3JjIGFuZCBjYXB0aW9uXG5pbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICAvL2luc3RhbnRpYXRlIHBhcmVudCBjb25zdHJ1Y3RvciBhbmQgZ2V0IGFjY2VzcyB0byBwb3B1cGVsZW1lbnQgZnJvbSBwYXJlbnRcbiAgICBzdXBlcih7IHBvcHVwU2VsZWN0b3IgfSk7XG4gICAgLy9zZXQgbmFtZSBhbmQgbGluayBwcm9wZXJ0aWVzIGZyb20gcG9wdXBQcmV2aWV3IHRvIGFzc2lnbiB2YWx1ZXMgd2l0aCBvcGVuXG4gICAgdGhpcy5fcHJldmlld0ltYWdlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBcIi5wcmV2aWV3LW1vZGFsX19pbWFnZVwiXG4gICAgKTtcbiAgICB0aGlzLl9wcmV2aWV3TmFtZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgXCIucHJldmlldy1tb2RhbF9fY2FwdGlvblwiXG4gICAgKTtcbiAgfVxuICBvcGVuKG5hbWUsIGxpbmspIHtcbiAgICB0aGlzLl9wcmV2aWV3SW1hZ2Uuc3JjID0gbGluaztcbiAgICB0aGlzLl9wcmV2aWV3SW1hZ2UuYWx0ID0gbmFtZTtcbiAgICB0aGlzLl9wcmV2aWV3TmFtZS50ZXh0Q29udGVudCA9IG5hbWU7XG4gICAgc3VwZXIub3BlbigpOyAvL3BhcmVudCBvcGVuIG1ldGhvZCBjYWxsZWRcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBQb3B1cFdpdGhJbWFnZTtcbiIsIi8vU2VjdGlvbiBjbGFzcyByZW5kZXJzIGxpc3Qgb2YgZWxlbWVudHMgb24gcGFnZVxuY2xhc3MgU2VjdGlvbiB7XG4gIC8vYWRkIGNvbnN0cnVjdG9yXG4gIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNsYXNzU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9pdGVtc0FycmF5ID0gaXRlbXM7IC8vZGF0YSBhcnJheVxuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7IC8vZnVuY3Rpb24gdG8gY3JlYXRlL3JlbmRlciBkYXRhIG9uIHBhZ2VcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNsYXNzU2VsZWN0b3IpOyAvL0NTUyBzZWxlY3RvciBmb3Igd2hlcmUgdG8gZW1iZWQgaXRlbVxuICB9XG5cbiAgLy9tZXRob2QgdG8gcmVuZGVyIGFsbCBlbGVtZW50cyBvbiBwYWdlXG4gIHJlbmRlckl0ZW1zKCkge1xuICAgIHRoaXMuX2l0ZW1zQXJyYXkuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7IC8vcmVuZGVyZXIgZnVtY3Rpb24gcmVuZGVycyBlYWNoIGVsZW1lbnQgb24gcGFnZVxuICAgIH0pO1xuICB9XG5cbiAgLy9tZXRob2QgdG8gdGFrZSBET00gZWxlbWVudCBhbmQgYWRkIHRvIGNvbnRhaW5lclxuICBhZGRJdGVtKGl0ZW0pIHtcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChpdGVtKTsgLy9hcHBlbmQgZWxlbWVudCB0byBwYWdlXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgU2VjdGlvbjtcbiJdLCJuYW1lcyI6WyJjb25zdHJ1Y3RvciIsImRhdGEiLCJjYXJkU2VsZWN0b3IiLCJoYW5kbGVDYXJkQ2xpY2siLCJ0aGlzIiwiX25hbWUiLCJuYW1lIiwiX2xpbmsiLCJsaW5rIiwiX2NhcmRTZWxlY3RvciIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfZ2V0VGVtcGxhdGUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX3NldENhcmRFdmVudExpc3RlbmVycyIsIl9saWtlQnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9oYW5kbGVDYXJkTGlrZSIsIl9kZWxldGVCdXR0b24iLCJfaGFuZGxlQ2FyZERlbGV0ZSIsIl9jYXJkSW1hZ2UiLCJfaGFuZGxlQ2FyZFByZXZpZXciLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJfY2FyZEVsZW1lbnQiLCJyZW1vdmUiLCJnZXRWaWV3IiwidGV4dENvbnRlbnQiLCJzcmMiLCJhbHQiLCJfcHJldmlld0J1dHRvbiIsImNvbmZpZyIsImZvcm1FbGVtZW50IiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX2Zvcm0iLCJfc2hvd0lucHV0RXJyb3IiLCJpbnB1dEVsZW1lbnQiLCJlcnJvckVsZW1lbnQiLCJpZCIsImFkZCIsInZhbGlkYXRpb25NZXNzYWdlIiwiX2hpZGVJbnB1dEVycm9yIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGFzSW52YWxpZElucHV0IiwiX2lucHV0RWxlbWVudHMiLCJldmVyeSIsIl9lbmFibGVTdWJtaXRCdXR0b24iLCJfYnV0dG9uRWxlbWVudCIsImRpc2FibGVkIiwiX2Rpc2FibGVTdWJtaXRCdXR0b24iLCJ0b2dnbGVCdXR0b25TdGF0ZSIsIl9zZXRFdmVudExpc3RlbmVycyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJzZXRUaW1lb3V0IiwiZm9yRWFjaCIsImVuYWJsZVZhbGlkYXRpb24iLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsIl9yZWYiLCJwb3B1cFNlbGVjdG9yIiwidGFyZ2V0IiwiY29udGFpbnMiLCJjbG9zZSIsIl9wb3B1cEVsZW1lbnQiLCJfaGFuZGxlRXNjQ2xvc2UiLCJiaW5kIiwib3BlbiIsIl9oYW5kbGVPdmVybGF5Q2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwia2V5Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJQb3B1cCIsImhhbmRsZUZvcm1TdWJtaXQiLCJzdXBlciIsIl9wb3B1cEZvcm0iLCJfaW5wdXRMaXN0IiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJfZm9ybVZhbHVlcyIsImlucHV0IiwidmFsdWUiLCJyZXNldCIsImZvcm1TZWxlY3RvciIsInByb2ZpbGVFZGl0QnV0dG9uIiwicHJvZmlsZUVkaXRNb2RhbCIsInByb2ZpbGVOYW1lIiwicHJvZmlsZURlc2NyaXB0aW9uIiwibW9kYWxJbnB1dE5hbWVGaWVsZCIsIm1vZGFsSW5wdXREZXNjcmlwdGlvbkZpZWxkIiwiY2FyZEVkaXRNb2RhbCIsImNhcmRFZGl0QnV0dG9uIiwiZWRpdEZvcm1WYWxpZGF0b3IiLCJGb3JtVmFsaWRhdG9yIiwiYWRkRm9ybVZhbGlkYXRvciIsInVzZXJpbmZvIiwidXNlck5hbWUiLCJ1c2VySm9iIiwiX3VzZXJOYW1lIiwiX3VzZXJEZXNjcmlwdGlvbiIsImdldFVzZXJJbmZvIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsInNldFVzZXJJbmZvIiwicHJvZmlsZVBvcHVwIiwiUG9wdXBXaXRoRm9ybSIsInZhbHVlcyIsInByZXZpZXdQb3B1cCIsIl9wcmV2aWV3SW1hZ2UiLCJfcHJldmlld05hbWUiLCJjcmVhdGVDYXJkIiwiY2FyZERhdGEiLCJDYXJkIiwiY2FyZE5hbWUiLCJjYXJkTGluayIsImNhcmRTZWN0aW9uIiwiY2xhc3NTZWxlY3RvciIsIml0ZW1zIiwicmVuZGVyZXIiLCJfaXRlbXNBcnJheSIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJyZW5kZXJJdGVtcyIsIml0ZW0iLCJhZGRJdGVtIiwicHJlcGVuZCIsImNhcmQiLCJhZGRDYXJkUG9wdXAiLCJuZXdDYXJkIl0sInNvdXJjZVJvb3QiOiIifQ==